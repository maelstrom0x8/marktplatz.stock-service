plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.graalvm.buildtools.native' version '0.9.28'
	id 'com.diffplug.spotless' version '6.23.3'
	id 'com.palantir.git-version' version '0.15.0'
	id "com.google.osdetector" version "1.7.3"
}

group = 'com.marktplatz'
version = gitVersion()

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
	useJUnitPlatform()
	testLogging {
		events = ["PASSED", "FAILED", "SKIPPED"]
		showStandardStreams = true
		exceptionFormat = "full"
	}
}


spotless {
	java {
		target 'src/**/*.java'
		googleJavaFormat('1.17.0')
		licenseHeaderFile "${rootDir}/gradle/spotless.java.license.txt"
		ratchetFrom 'origin/master'
		trimTrailingWhitespace()
		endWithNewline()
		targetExclude '**/Tmp*.java'
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		indentWithSpaces(2)
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.named("bootBuildImage") {
	builder = "dashaun/builder:tiny"
	environment = ["BP_NATIVE_IMAGE": "true"]
	imageName = "maelstrom0x8/marktplatz-${rootProject.getName()}:${project.version}"
}
